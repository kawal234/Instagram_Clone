// Generated by view binder compiler. Do not edit!
package com.example.instagramclone.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.core.widget.NestedScrollView;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.instagramclone.R;
import com.google.android.material.appbar.MaterialToolbar;
import de.hdodenhof.circleimageview.CircleImageView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentHome2Binding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final View divider;

  @NonNull
  public final CircleImageView imageView4;

  @NonNull
  public final CircleImageView imageView5;

  @NonNull
  public final MaterialToolbar materialToolbar;

  @NonNull
  public final NestedScrollView nestedScrollView2;

  @NonNull
  public final RecyclerView postRv;

  private FragmentHome2Binding(@NonNull ConstraintLayout rootView, @NonNull View divider,
      @NonNull CircleImageView imageView4, @NonNull CircleImageView imageView5,
      @NonNull MaterialToolbar materialToolbar, @NonNull NestedScrollView nestedScrollView2,
      @NonNull RecyclerView postRv) {
    this.rootView = rootView;
    this.divider = divider;
    this.imageView4 = imageView4;
    this.imageView5 = imageView5;
    this.materialToolbar = materialToolbar;
    this.nestedScrollView2 = nestedScrollView2;
    this.postRv = postRv;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentHome2Binding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentHome2Binding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_home2, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentHome2Binding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.divider;
      View divider = ViewBindings.findChildViewById(rootView, id);
      if (divider == null) {
        break missingId;
      }

      id = R.id.imageView4;
      CircleImageView imageView4 = ViewBindings.findChildViewById(rootView, id);
      if (imageView4 == null) {
        break missingId;
      }

      id = R.id.imageView5;
      CircleImageView imageView5 = ViewBindings.findChildViewById(rootView, id);
      if (imageView5 == null) {
        break missingId;
      }

      id = R.id.materialToolbar;
      MaterialToolbar materialToolbar = ViewBindings.findChildViewById(rootView, id);
      if (materialToolbar == null) {
        break missingId;
      }

      id = R.id.nestedScrollView2;
      NestedScrollView nestedScrollView2 = ViewBindings.findChildViewById(rootView, id);
      if (nestedScrollView2 == null) {
        break missingId;
      }

      id = R.id.post_rv;
      RecyclerView postRv = ViewBindings.findChildViewById(rootView, id);
      if (postRv == null) {
        break missingId;
      }

      return new FragmentHome2Binding((ConstraintLayout) rootView, divider, imageView4, imageView5,
          materialToolbar, nestedScrollView2, postRv);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
